# Для поступления в вуз абитуриент должен предъявить результаты трех
# экзаменов в виде ЕГЭ, каждый из них оценивается целым числом от 0 до 100
# баллов. При этом абитуриенты, набравшие менее 40 баллов (неудовлетворительную
# оценку) по любому экзамену из конкурса выбывают. Остальные абитуриенты
# участвуют в конкурсе по сумме баллов за три экзамена.
# В конкурсе участвует N человек, при этом количество мест равно K. Определите
# проходной балл, то есть такое количество баллов, что количество участников,
# набравших столько или больше баллов не превосходит K, а при добавлении к ним
# абитуриентов, набравших наибольшее количество баллов среди непринятых
# абитуриентов, общее число принятых абитуриентов станет больше K.
# Формат ввода
# Программа получает на вход количество мест K. Далее идут строки с информацией
# об абитуриентах, каждая из которых состоит из имени (текстовая строка
# содержащая произвольное число пробелов) и трех чисел от 0 до 100, разделенных
# пробелами. Используйте для ввода файл input.txt с указанием кодировки utf8
# (для создания такого файла на своем компьютере в программе Notepad++ следует
# использовать кодировку UTF-8 без BOM).
# Формат вывода
# Программа должна вывести проходной балл в конкурсе. Выведенное значение
# должно быть минимальным баллом, который набрал абитуриент, прошедший по
# конкурсу. Также возможны две ситуации, когда проходной балл не определен.
# Если будут зачислены все абитуриенты, не имеющие неудовлетворительных оценок,
# программа должна вывести число 0.
# Если количество имеющих равный максимальный балл абитуриентов больше чем K,
# программа должна вывести число 1.
# Используйте для вывода файл output.txt с указанием кодировки utf8.
# Предупреждение
# Пожалуйста, тестируйте файловый ввод и вывод на своем компьютере. В этой
# задаче слушатели часто получают ошибки вроде RE на первом тесте,
# протестировав у себя с помощью консоли и просто заменив input() на чтение
# из файла перед сдачей. К сожалению, такую замену не всегда удается сделать
# без ошибок, и решение слушателей действительно перестает правильно работать
# даже на первом тесте.

fin = open('input.txt', 'r', encoding='utf8')
fout = open('output.txt', 'w', encoding='utf8')

k = int(fin.readline())
# print(k)

lst = []
lstSc = []
for item in fin:
    tmp = item.split()
    val3 = int(tmp[-1])
    val2 = int(tmp[-2])
    val1 = int(tmp[-3])
    if val1 >= 40 and val2 >= 40 and val3 >= 40:
        lst.append(item.split())
        lstSc.append((val1+val2+val3))
# print(*lst)

lstSc.sort(reverse=True)
# print(*lstSc)

if k == 0:
    res = 0
elif k >= len(lstSc):
    res = 0
elif k == 1 and len(lstSc) == 1:
    res = 0
elif lstSc.count(lstSc[0]) > k:
    res = 1
else:
    if lstSc[k-1] != lstSc[k]:
        res = lstSc[k-1]
    else:
        res = lstSc.index(lstSc[k-1])
        res = lstSc[res-1]
print(res, file=fout)

fin.close()
fout.close()
